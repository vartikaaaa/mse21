{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/annoyroy/Desktop/video-group-meeting-master/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useRef}from'react';import styled from'styled-components';var VideoCard=function VideoCard(props){var ref=useRef();var peer=props.peer;useEffect(function(){peer.on('stream',function(stream){ref.current.srcObject=stream;});peer.on('track',function(track,stream){});},[peer]);return/*#__PURE__*/React.createElement(Video,{playsInline:true,autoPlay:true,ref:ref});};var Video=styled.video(_templateObject());export default VideoCard;","map":{"version":3,"sources":["/Users/annoyroy/Desktop/video-group-meeting-master/server/client/src/components/Video/VideoCard.js"],"names":["React","useEffect","useRef","styled","VideoCard","props","ref","peer","on","stream","current","srcObject","track","Video","video"],"mappings":"8UAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,GAAG,CAAGJ,MAAM,EAAlB,CACA,GAAMK,CAAAA,IAAI,CAAGF,KAAK,CAACE,IAAnB,CAEAN,SAAS,CAAC,UAAM,CACdM,IAAI,CAACC,EAAL,CAAQ,QAAR,CAAkB,SAACC,MAAD,CAAY,CAC5BH,GAAG,CAACI,OAAJ,CAAYC,SAAZ,CAAwBF,MAAxB,CACD,CAFD,EAGAF,IAAI,CAACC,EAAL,CAAQ,OAAR,CAAiB,SAACI,KAAD,CAAQH,MAAR,CAAmB,CACnC,CADD,EAED,CANQ,CAMN,CAACF,IAAD,CANM,CAAT,CAQA,mBACE,oBAAC,KAAD,EACE,WAAW,KADb,CAEE,QAAQ,KAFV,CAGE,GAAG,CAAED,GAHP,EADF,CAOD,CAnBD,CAqBA,GAAMO,CAAAA,KAAK,CAAGV,MAAM,CAACW,KAAV,mBAAX,CAEA,cAAeV,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nconst VideoCard = (props) => {\n  const ref = useRef();\n  const peer = props.peer;\n\n  useEffect(() => {\n    peer.on('stream', (stream) => {\n      ref.current.srcObject = stream;\n    });\n    peer.on('track', (track, stream) => {\n    });\n  }, [peer]);\n\n  return (\n    <Video\n      playsInline\n      autoPlay\n      ref={ref}\n    />\n  );\n};\n\nconst Video = styled.video``;\n\nexport default VideoCard;\n"]},"metadata":{},"sourceType":"module"}