{"ast":null,"code":"var _jsxFileName = \"/Users/annoyroy/Desktop/video-group-meeting-master/client/src/components/Video/VideoCard.js\";\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst VideoCard = props => {\n  const ref = useRef();\n  const peer = props.peer;\n  useEffect(() => {\n    peer.on('stream', stream => {\n      ref.current.srcObject = stream;\n    });\n    peer.on('track', (track, stream) => {});\n  }, [peer]);\n  return /*#__PURE__*/React.createElement(Video, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  });\n};\n\nconst Video = styled.video``;\nexport default VideoCard;","map":{"version":3,"sources":["/Users/annoyroy/Desktop/video-group-meeting-master/client/src/components/Video/VideoCard.js"],"names":["React","useEffect","useRef","styled","VideoCard","props","ref","peer","on","stream","current","srcObject","track","Video","video"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,QAAMK,IAAI,GAAGF,KAAK,CAACE,IAAnB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,IAAI,CAACC,EAAL,CAAQ,QAAR,EAAmBC,MAAD,IAAY;AAC5BH,MAAAA,GAAG,CAACI,OAAJ,CAAYC,SAAZ,GAAwBF,MAAxB;AACD,KAFD;AAGAF,IAAAA,IAAI,CAACC,EAAL,CAAQ,OAAR,EAAiB,CAACI,KAAD,EAAQH,MAAR,KAAmB,CACnC,CADD;AAED,GANQ,EAMN,CAACF,IAAD,CANM,CAAT;AAQA,sBACE,oBAAC,KAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,GAAG,EAAED,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAnBD;;AAqBA,MAAMO,KAAK,GAAGV,MAAM,CAACW,KAAM,EAA3B;AAEA,eAAeV,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nconst VideoCard = (props) => {\n  const ref = useRef();\n  const peer = props.peer;\n\n  useEffect(() => {\n    peer.on('stream', (stream) => {\n      ref.current.srcObject = stream;\n    });\n    peer.on('track', (track, stream) => {\n    });\n  }, [peer]);\n\n  return (\n    <Video\n      playsInline\n      autoPlay\n      ref={ref}\n    />\n  );\n};\n\nconst Video = styled.video``;\n\nexport default VideoCard;\n"]},"metadata":{},"sourceType":"module"}