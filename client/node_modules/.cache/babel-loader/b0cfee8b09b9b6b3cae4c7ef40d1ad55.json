{"ast":null,"code":"module.exports = make;\nmodule.exports.ctor = ctor;\nmodule.exports.array = array;\nmodule.exports.sync = sync;\n\nconst Readable = require(\"readable-stream/readable\"),\n      inherits = require(\"util\").inherits,\n      xtend = require(\"xtend\"),\n      setImmediate = global.setImmediate || process.nextTick;\n\nfunction ctor(options, _read) {\n  if (_read == null) {\n    _read = options;\n    options = {};\n  }\n\n  if (Array.isArray(_read)) _read = _shifter(_read);\n  if (typeof _read != \"function\") throw new Error(\"You must implement an _read function for Spigot\");\n\n  function Spigot(override) {\n    if (!(this instanceof Spigot)) return new Spigot(override);\n    this.options = xtend(options, override);\n    Readable.call(this, this.options);\n  }\n\n  inherits(Spigot, Readable);\n  Spigot.prototype._read = _read;\n  return Spigot;\n}\n\nfunction make(options, _read) {\n  return ctor(options, _read)();\n}\n\nfunction _shifter(array) {\n  var copy = array.slice(0);\n  return function _shift() {\n    var self = this;\n    setImmediate(function later() {\n      var val = copy.shift();\n\n      if (val === undefined) {\n        val = null;\n      }\n\n      self.push(val);\n    });\n  };\n}\n\nfunction array(options, array) {\n  if (Array.isArray(options)) {\n    array = options;\n    options = {};\n  }\n\n  return make(options, _shifter(array));\n}\n\nfunction sync(options, fn) {\n  if (typeof options == \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  var toAsync = function toAsync() {\n    var self = this;\n    setImmediate(function later() {\n      var val = fn();\n\n      if (val === undefined) {\n        val = null;\n      }\n\n      self.push(val);\n    });\n  };\n\n  return make(options, toAsync);\n}","map":{"version":3,"sources":["/Users/annoyroy/Desktop/video-group-meeting-master/node_modules/stream-spigot/index.js"],"names":["module","exports","make","ctor","array","sync","Readable","require","inherits","xtend","setImmediate","global","process","nextTick","options","_read","Array","isArray","_shifter","Error","Spigot","override","call","prototype","copy","slice","_shift","self","later","val","shift","undefined","push","fn","toAsync"],"mappings":"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","sourcesContent":["module.exports = make\nmodule.exports.ctor = ctor\n\nmodule.exports.array = array\nmodule.exports.sync = sync\n\nconst Readable = require(\"readable-stream/readable\")\n    , inherits = require(\"util\").inherits\n    , xtend    = require(\"xtend\")\n    , setImmediate = global.setImmediate || process.nextTick\n\nfunction ctor (options, _read) {\n  if (_read == null) {\n    _read    = options\n    options   = {}\n  }\n\n  if (Array.isArray(_read))\n    _read = _shifter(_read)\n\n  if (typeof _read != \"function\")\n    throw new Error(\"You must implement an _read function for Spigot\")\n\n  function Spigot (override) {\n    if (!(this instanceof Spigot))\n      return new Spigot(override)\n\n    this.options = xtend(options, override)\n    Readable.call(this, this.options)\n  }\n\n  inherits(Spigot, Readable)\n\n  Spigot.prototype._read = _read\n\n  return Spigot\n}\n\nfunction make(options, _read) {\n  return ctor(options, _read)()\n}\n\nfunction _shifter(array) {\n  var copy = array.slice(0)\n  return function _shift() {\n    var self = this\n    setImmediate(function later() {\n      var val = copy.shift()\n      if (val === undefined) {\n        val = null\n      }\n      self.push(val)\n    })\n  }\n}\n\nfunction array(options, array) {\n  if (Array.isArray(options)) {\n    array = options\n    options = {}\n  }\n\n  return make(options, _shifter(array))\n}\n\nfunction sync(options, fn) {\n  if (typeof options == \"function\") {\n    fn = options\n    options = {}\n  }\n  var toAsync = function toAsync() {\n    var self = this\n    setImmediate(function later() {\n      var val = fn()\n      if (val === undefined) {\n        val = null\n      }\n      self.push(val)\n    })\n  }\n  return make(options, toAsync)\n}\n"]},"metadata":{},"sourceType":"script"}